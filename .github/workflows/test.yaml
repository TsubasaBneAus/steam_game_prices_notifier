name: Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  octocov:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go based on the go.mod file
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "./go.mod"

      - name: Run tests with the coverage output
        run: go test -v -race -shuffle on ./app/... -coverprofile=coverage.out

      - name: Create a coverage report
        uses: k1LoW/octocov-action@73d561f65d59e66899ed5c87e4621a913b5d5c20 # v1.5.0
        with:
          config: .octocov.yaml

  jest:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "awscdk"

    steps:
      - name: Check out code into the AWS CDK directory
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version-file: "./awscdk/package.json"
          cache: "npm"
          cache-dependency-path: "./awscdk/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with the coverage output
        run: npm test --maxWorkers=100% --watchAll=false --coverage
